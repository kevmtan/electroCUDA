function [elecMatrix, elecLabels, elecRgb, elecPairs, elecPresent]=mgrid2matlab(mgridFname,import_ref)
%function [elecMatrix, elecLabels, elecRgb, elecPairs, elecPresent]=mgrid2matlab(mgridFname,import_ref)
%
% Required Input:
%  mgridFname - The filename AND path of the mgrid file you wish to import OR the
%               freesurfer name of the subject. If not specified, a GUI  
%               pops up for you to save the file
%
% Optional Input:
%  import_ref - If 0 the reference electrode strip, which must have the
%               name REF will not be imported. Otherwise, it is imported.
%               {default: 0}
%
% Output:
%  elecMatrix  - 3D matrix of electrode coordinates. Column 1 is R->L (i.e.,
%                1 is the right-most plane of voxels). Column 2 is in S->I
%                (i.e., 1 is the most superior plane of voxels). Column 3 is
%                A->P (i.e., 1 is the most anterior plane of voxels). NOTE
%                THAT 1 IS ADDED TO EACH MGRID COORDINATE, since BioimageSuite
%                starts indexing at 0.
%  elecLabels  - Cell array of electrode names corresponding to each row of
%                elecMatrix. Each contact's stem is separated from its
%                number by an underscore.
%  elecRgb     - Matrix of RGB colors for each electrode. The nth row of
%                elecRgb corresponds to the nth element of elecLabels.
%  elecPairs   - n x 3 cell array. First two columns indicate electrode
%                pairs that are neighbors. Last column indicates the color
%                (rgb) of the pair. For use with plotElecPial.m.
%  elecPresent - Binary vector of length(elecMatrix). If elecPresent(x)==0
%                then the xth electrode is disabled (i.e., cut off and not 
%                implanted).
%
%  Examples:
%   Load with a GUI:
%   >>[elecMatrix, elecLabels, elecRgb]=mgrid2matlab();
%
%   Load using iELVis storage conventions:
%   >>[elecMatrix, elecLabels, elecRgb]=mgrid2matlab('PT001');
%
%   Load using an full mgrid filename:
%   >>[elecMatrix, elecLabels, elecRgb]=mgrid2matlab('/Applications/freesurfer/subjects/TWH11/elec_recon/TWH11.mgrid');
%
%
% Authors: David M. Groppe & Saba Shahab
% Feb. 2015
% Feinstein Institute for Medical Research (Mehtalab)/Univ. of Toronto (Honeylab)
%

% Future work:
% -check to see if it works for non-square grids

% History:
% May 2015: Added elecPairs and elecPresent (DG)

fsDir=getFsurfSubDir();

if nargin<1
    [inFname, inPath]=uigetfile('*.mgrid','select the *.mgrid file generated by BioImageSuite');
    mgridFname=[inPath inFname];
else
    if isempty(findstr('.mgrid',mgridFname))
        %mgridFname must be a freesurfer subject codename
        mgridFname=fullfile(fsDir,mgridFname,'elec_recon',[mgridFname '.mgrid']);
    end
end
if nargin<2,
   import_ref=0; 
end
if ~exist(mgridFname,'file')
   error('mgrid file %s not found.',mgridFname); 
end
fid = fopen(mgridFname, 'r');

elecMatrix = [];
elecLabels=[];
elecRgb=[];
elecPairs=[];
elecPresent=[];
ct=0;
crntLabel=[];
crntCt=0;
crntColor=[1 1 1];
nStripGrid=0;
nPairs=0;

% Get rid of header
while feof(fid) == 0
    line = fgetl(fid);
    if strcmp(line,'#- - - - - - - - - - - - - - - - - - -')
        break;
    end
end

while feof(fid) == 0
    line = fgetl(fid);
    if strcmpi(line, '#Position')
        % New electrode
        line = fgetl(fid);
        ct=ct+1; % # of electrodes
        elecMatrix=[elecMatrix; str2num(line)];
        if dim(1)==1 || dim(2)==1
            % strip electrode
            elecLabels{ct}=[crntLabel '_' num2str(crntCt)];
            tempLabelsCt=tempLabelsCt+1;
            tempLabels{tempLabelsCt}=elecLabels{ct}; % underscore between electrode
            %name and number
            %tempLabels{tempLabelsCt}=[crntLabel num2str(crntCt)]; %no underscore
        else
            % Grid electrode
            if 1
                nRow=dim(1);
                nCol=dim(2);
                currentCol=ceil((nRow*nCol-crntCt+1)/nRow);
                currentRow=(nRow*nCol-crntCt+1)-nRow*(currentCol-1);
                %fprintf('Current Column - Row: %d - %d\n',currentCol,currentRow);
                gridElecNum=nCol+nCol*(currentRow-1)-currentCol+1;
                %fprintf('Current Column - Row [ElecNum]: %d - %d [ElecNum %d]\n',currentCol,currentRow,gridElecNum);
                elecLabels{ct}=[crntLabel '_' num2str(gridElecNum)];
                tempLabelsCt=tempLabelsCt+1;
                tempLabels{tempLabelsCt}=elecLabels{ct}; % underscore between electrode
            else
                % Just count down by one starting at highest numbered
                % electrode (useful for figuring out the order of
                % electrodes in the mgrid file)
                elecLabels{ct}=[crntLabel '_' num2str(crntCt)];
                tempLabelsCt=tempLabelsCt+1;
                tempLabels{tempLabelsCt}=[crntLabel num2str(crntCt)]; %no underscore
            end
        end
        elecRgb(ct,1:3)=crntColor;
        crntCt=crntCt-1;
    elseif strcmpi(line, '#Electrode Present')
        % indicates if electrode has been cut out
        line = fgetl(fid);
        elecPresent(ct)=str2num(line);
    elseif strcmpi(line,'#Description')
        % New strip/grid name
        % This is the first line we hit when we get to a new strip/grid
        
        %If this is not the first strip/grid, compute electrode pairs
        if nStripGrid
            if dim(1)==1 || dim(2)==1
                % strip electrode
                for a=1:(dim(2)-1),
                    nPairs=nPairs+1;
                    elecPairs{nPairs,3}=crntColor;
                    elecPairs{nPairs,1}=tempLabels{a};
                    elecPairs{nPairs,2}=tempLabels{a+1};
                end
            else
                % Grid
                gridLines=derive_grid_lines(crntLabel,dim);
                for a=1:size(gridLines,1)
                    for b=1:(length(gridLines{a,2})-1),
                        nPairs=nPairs+1;
                        elecPairs{nPairs,3}=crntColor;
                        elecPairs{nPairs,1}=[crntLabel '_' num2str(gridLines{a,2}(b))]; % note the underscore
                        elecPairs{nPairs,2}=[crntLabel '_' num2str(gridLines{a,2}(b+1))]; % note the underscore
                    end
                end
            end
        end
        tempLabels=[];
        tempLabelsCt=0;
        nStripGrid=nStripGrid+1;
        crntLabel = fgetl(fid);
    elseif strcmpi(line,'#Dimensions')
        % New strip/grid dimensions
        dim = str2num(fgetl(fid));
        crntCt=dim(1)*dim(2); % Strips start with highest # in mrid file
    elseif strcmpi(line,'#Color')
        % New strip/grid color
        crntColor=str2num(fgetl(fid));
    end
    %elseif strncmpi(line,'# Electrode Grid')
end
fid = fclose(fid);
elecMatrix=elecMatrix+1; % BioImageSuite indexes the first voxel as [0 0 0]

% Compute electrode pairs for final stip/grid
if nStripGrid
    if dim(1)==1 || dim(2)==1
        % strip electrode
        for a=1:(dim(2)-1),
            nPairs=nPairs+1;
            elecPairs{nPairs,3}=crntColor;
            elecPairs{nPairs,1}=tempLabels{a};
            elecPairs{nPairs,2}=tempLabels{a+1};
        end
    else
        % Grid
        gridLines=derive_grid_lines(crntLabel,dim);
        for a=1:size(gridLines,1)
            for b=1:(length(gridLines{a,2})-1),
                nPairs=nPairs+1;
                elecPairs{nPairs,3}=crntColor;
                elecPairs{nPairs,1}=[crntLabel '_' num2str(gridLines{a,2}(b))]; % note the underscore
                elecPairs{nPairs,2}=[crntLabel '_' num2str(gridLines{a,2}(b+1))]; % note the underscore
            end
        end
    end
end

if universalNo(import_ref),
    % Remove REF electrodes
    nElec=length(elecLabels);
    keepElec=zeros(nElec,1);
    for a=1:nElec,
        if ~strncmpi('REF',elecLabels{a},3),
            keepElec(a)=1;
        end
    end
    keepIds=find(keepElec==1);
    elecLabels=elecLabels(keepIds);
    elecPresent=elecPresent(keepIds);
    elecRgb=elecRgb(keepIds,:);
    
    nPairs=size(elecPairs,1);
    keepPair=zeros(nPairs,1);
    for a=1:nPairs,
        if ~strncmpi('REF',elecPairs{a,1},3),
            keepPair(a)=1;
        end
    end
    elecPairs=elecPairs(find(keepPair),:);
end